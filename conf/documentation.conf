[general.logo]
type=text
description=<<EOT
Logo displayed on web pages.
EOT

[general.domain]
type=text
description=<<EOT
Domain name of PacketFence system.
EOT

[general.caching]
type=toggle
options=enabled|disabled
description=<<EOT
Enable caching of isinternal values. Not recommended on large networks.
Disabled by default.
EOT

[general.dnsservers]
type=text
description=<<EOT
Comma-delimited list of DNS servers.
EOT

[general.hostname]
type=text
description=<<EOT
Hostname of PacketFence system. This is concatenated with the domain
in Apache rewriting rules and therefore must be resolvable by clients.
EOT

[general.dhcpservers]
type=text
description=<<EOT
Comma-delimited list of DHCP servers.
EOT

[general.locale]
type=multi
options=de_DE|en_US|es_ES|fr_FR|he_IL|it_IT|nl_NL|pt_BR
description=<<EOT
Locale used for message translation
More than 1 can be specified
EOT

[general.timezone]
type=text
description=<<EOT
System's timezone in string format. Supported list:
http://www.php.net/manual/en/timezones.php
EOT

[general.maintenance_interval]
type=time
description=<<EOT
Interval at which Packetfence runs its maintenance tasks.
EOT

[network.dhcpdetector]
type=toggle
options=enabled|disabled
description=<<EOT
If enabled, PacketFence will monitor DHCP-specific items such as rogue
DHCP services, DHCP-based OS fingerprinting, computername/hostname 
resolution, and (optionnally) option-82 location-based information. 
The monitored DHCP packets are DHCPDISCOVERs and DHCPREQUESTs - both
are broadcasts, meaning a span port is not necessary.  This feature is
highly recommended if the internal network is DHCP-based.
EOT

[network.dhcpoption82logger]
type=toggle
options=enabled|disabled
description=<<EOT
If enabled PacketFence will monitor DHCP option82 location-based
information. This feature is only available if the dhcpdetector is
activated.
EOT

[network.rogue_dhcp_detection]
type=toggle
options=enabled|disabled
description=<<EOT
Tries to identify Rogue DHCP Servers and triggers the 1100010 violation 
if one is found. This feature is only available if the dhcpdetector is 
activated.
EOT

[network.rogueinterval]
type=numeric
description=<<EOT
When rogue DHCP server detection is enabled, this parameter defines
how often to email administrators.  With its default setting of 10, 
it will email administrators the details of the previous 10 DHCP
offers.
EOT

[proxies]
description=<<EOT
This section allows you to configure locally proxied content.  We 
typically use this to proxy tools like Stinger rather than having to
continually download the latest version. Ex:
tools/stinger.exe=http://download.nai.com/products/mcafee-avert/stinger.exe
The Stinger utility could then be accessed at
https://pfhostname/proxies/tools/stinger.exe.
EOT

[services.dhcpd]
type=toggle
options=enabled|disabled
description=<<EOT
Should DHCPd be managed by PacketFence?
EOT

[services.named]
type=toggle
options=enabled|disabled
description=<<EOT
Should named be managed by PacketFence?
EOT

[services.radiusd]
type=toggle
options=enabled|disabled
description=<<EOT
Should radiusd be managed by PacketFence?
EOT

[services.httpd_binary]
type=text
description=<<EOT
Location of the apache binary. Only necessary to change if you are
not running the RPMed version.
EOT

[services.dhcpd_binary]
type=text
description=<<EOT
Location of the dhcpd binary. Only necessary to change if you are not
running the RPMed version.
EOT

[services.named_binary]
type=text
description=<<EOT
Location of the named binary. Only necessary to change if you are not
running the RPMed version.
EOT

[services.radiusd_binary]
type=text
description=<<EOT
Location of the RADIUS binary. Only necessary to change if you are not
running the RPMed version.
EOT

[services.snmptrapd_binary]
type=text
description=<<EOT
Location of the snmptrapd binary. Only necessary to change if you are
not running the RPMed version. 
EOT

[services.snort_binary]
type=text
description=<<EOT
Location of the snort binary. Only necessary to change if you are not
running the RPMed version.
EOT

[trapping.redirecturl]
type=text
description=<<EOT
Default URL to redirect to on registration/mitigation release.  This
is only used if a per-violation redirecturl is not defined.
EOT

[trapping.always_use_redirecturl]
type=toggle
options=enabled|disabled
description=<<EOT
Under most circumstances we can redirect the user to the URL he originally 
intended to visit. When enabled, always_use_redirecturl forces the captive 
portal to redirect the user to the URL defined in trapping.redirecturl instead.
EOT

[trapping.detection]
type=toggle
options=enabled|disabled
description=<<EOT
Enables snort-based worm detection.  If you don't have a span
interface available, don't bother enabling it.  If you do, you'll most
definately want this on.
EOT

[trapping.detection_engine]
type=toggle
options=snort|suricata
description=<<EOT
Choose between our supported IDS engine.
EOT

[trapping.redirtimer]
type=time
description=<<EOT
How long to display the progress bar during trap release.  Setting it
to a value of 5 or higher is recommended when in arp mode.  Doing so
allows the client time to receive and process the redirection ARP sent
by PacketFence.
EOT

[trapping.blacklist]
type=text
description=<<EOT
Comma-delimited list of MAC addresses that are not allowed to pass
through the PacketFence system.
EOT

[trapping.range]
type=text
description=<<EOT
Address ranges/CIDR blocks that PacketFence will monitor/detect/trap
on.  Gateway, network, and broadcast addresses are ignored.
Comma-delimited entires should be of the form
a.b.c.0/24
a.b.c.0-255
a.b.c.0-a.b.c.255
a.b.c.d
EOT

[trapping.whitelist]
type=text
description=<<EOT
Comma-delimited list of MAC addresses that are immune to isolation. 
Additionally, in ARP mode no registration or trapping is performed so whitelisted hosts are always allowed to pass.
EOT

[trapping.passthrough]
type=toggle
options=iptables|proxy|disabled
description=<<EOT
Method by which content is delivered to trapped systems. When set to 
"proxy", PacketFence uses Apache's reverse proxy functionality and 
rewrites links. Note that any link to an external resource on the 
target server will not be properly rewritten. When set to "iptables",
PacketFence creates passthroughs to the content for only those nodes
trapped with the corresponding violation.  Be aware that an iptables
passthrough is based on IP address and clients will be able to get to
ALL content on the destination site.
When set to "disabled" passthrough is disabled.
EOT

[trapping.registration]
type=toggle
options=enabled|disabled
description=<<EOT
If enabled, nodes will be required to register on first network
access.  Further registration options are configured in the 
registration section.
EOT

[registration.expire_mode]
type=toggle
options=window|deadline|session|disabled
description=<<EOT
If set to "deadline", the expire_deadline option defines the date at
which a node reverts to an unregistered state.  If set to "window",
the window is used to determine the length of time after registration
that a node remains registered.  If set to "session", it specifies
that a client should be unregistered as soon as its iplog entry closes
(or with a bit of latency - check regitration.expire_session).
EOT

[registration.expire_window]
type=time
description=<<EOT
If expire_mode is set to "window", this is length of time after
registration that a node reverts to an unregistered state.
EOT

[registration.expire_deadline]
type=date
description=<<EOT
If expire_mode is set to "deadline", this is the date (formatted as
returned by the "date" command) at which nodes revert to an
unregistered state.  This would typically be the end of a semester.
EOT

[registration.expire_session]
type=time
description=<<EOT
If expire_mode is set to "session", this is the amount of time after
a node's iplog entry is closed that it reverts to an unregistered
state.
Warning: Does not work in vlan isolation mode!
EOT

[registration.skip_window]
type=time
description=<<EOT
The length of time that a node may skip registration.  For instance,
setting it to 2880 minutes would allow students to skip registration
for two days, giving them time to get a student ID, password, etc.
EOT

[registration.skip_mode]
type=toggle
options=window|deadline|disabled
description=<<EOT
If set to "deadline", the deadline option defines the time at which
skipping registration is no longer an option for clients.  If set to
"window", the window is used to determine the amount of time after 
first network access that a node may skip registration.
EOT

[registration.skip_deadline]
type=date
description=<<EOT
If mode is set to "deadline", this is the date at which the "skip
registration" option is disabled.  Date string is formatted as the
output of the "date" command is.
EOT

[registration.maxnodes]
type=numeric
description=<<EOT
If defined, the maximum number of nodes that can be registered to a
single PID.
EOT

[registration.skip_reminder]
type=time
description=<<EOT
Interval that a user is re-prompted to register after skipping.  For
example, if window=2w and reminder=1d, a user will be allowed to skip
for two weeks but will be re-prompted every day.
EOT

[registration.auth]
type=text
description=<<EOT
Method or methods by which registering nodes will be authenticated.  
Templates for ldap, radius, kerberos, local and preregistered_guests are 
available at <conf_dir>/authentication/.
If you wish to use a different authentication mechanism, simply create
a file called <conf_dir>/authentication/<authname>.pm, fill it with
the necessary data, and set auth=<authname>.  The default value, 
local, relies on a local access file in <conf_dir>/user.conf. Several 
values can be specified and seperated with a comma. Ex: local,ldap. A
choice will be displayed on the captive portal.
EOT

[registration.default_auth]
type=text
description=<<EOT
Authentication method selected as the default in the captive portal 
drop-down. Only useful if you have more than one authentication method
(registration.auth).
EOT

[registration.button_text]
type=text
description=<<EOT
The button text will appear on the registration page submit button
EOT

[registration.nbregpages]
type=numeric
description=<<EOT
The number of registration pages to show to the user. If higher than
1, you'll have to create the pages 
html/captive-portal/templates/register_2.html
...
html/captive-portal/templates/register_<nbregpages>.html
EOT

[registration.guests_self_registration]
type=toggle
options=enabled|disabled
description=<<EOT
Is the guest self-registration feature enabled or not. Self-registration 
is the signup button where a guest can register by email, SMS or be sponsored 
their access.
EOT

[registration.billing_engine]
type=toggle
options=enabled|disabled
description=<<EOT
Enable or Disable the billing engine that allow registering to the network by buying access
EOT

[guests_self_registration.modes]
type=multi
options=email|sms|sponsor
description=<<EOT
Self-registration is the signup button where a guest can register by 
email, SMS or sponsored by someone. Several modes can be enabled at the same 
time. To disable guest self-registration entirely see the 
guests_self_registration parameter under [registration].
EOT

[guests_self_registration.category]
type=text
description=<<EOT
The node category that will be assigned to guests' nodes.
EOT

[guests_self_registration.access_duration]
type=time
description=<<EOT
The length of network access a confirmed guest will have. On successful
confirmation a guest node's unregdate is set to now + access_duration.
EOT

[guests_self_registration.email_activation_timeout]
type=time
description=<<EOT
This is the delay given to a guest who registered by email confirmation
to log into his email and click the activation link. Low values will 
require a modification of maintenance_interval because the timeout is 
enforced every 10 maintenance intervals.
EOT

[guests_self_registration.allow_localdomain]
type=toggle
options=enabled|disabled
description=<<EOT
Should we accept self-registration with email address from the local
domain
EOT

[guests_self_registration.mandatory_fields]
type=multi
options=firstname|lastname|organization|phone|mobileprovider|email|sponsor_email
description=<<EOT
Fields required to be filled in the self-registration form. Valid values are:
firstname, lastname, organization, phone, mobileprovider, email, 
sponsor_email. Basic validation of minimally required values per guest mode 
is provided by default.
EOT

[guests_self_registration.guest_pid]
type=toggle
options=firstname|lastname|organization|phone|email|sponsor_email
description=<<EOT
What field should we assign to the pid of the guest? Defaults to email.
EOT

[guests_self_registration.sponsors_only_from_localdomain]
type=toggle
options=yes|no
description=<<EOT
Sponsors emails can only be from the general.localdomain domain. Defaults to 
yes.
EOT

[guests_self_registration.sponsor_authentication]
type=toggle
options=guest_managers|kerberos|ldap|local|radius
description=<<EOT
Method by which sponsors will be validated as valid sponsors and then 
authenticated. Templates for LDAP, RADIUS, Kerberos and local are available
at <conf_dir>/authentication.  If you wish to use a different 
authentication mechanism, simply create a file called 
<conf_dir>/authentication/<authname>.pm, fill it with the necessary
data, and set sponsor_authentication=<authname>. The default value, local,
relies on a local access file in <conf_dir>/user.conf.
EOT

[guests_self_registration.preregistration]
type=toggle
options=enabled|disabled
description=<<EOT
Enabling this allows guests to requests their access in advance. You
must take care of opening your external firewall up to PacketFence and
make sure your server can send emails properly (generated
username/password are sent by email).
preregistration=enabled
EOT

[guests_admin_registration.access_duration_choices]
type=text
description=<<EOT
These are all the choices offered in the guest management interface as
possible access duration values for a given registration.
EOT

[guests_admin_registration.default_access_duration]
type=time
description=<<EOT
This is the default access duration value selected in the dropdown on the 
guest management interface.
EOT

[guests_admin_registration.category]
type=text
description=<<EOT
The node category that will be assigned to guests' nodes registered by an 
admin by default.
EOT

[passthroughs]
description=<<EOT
This section allows you to create passthroughs to HTML content or 
remote addresses/networks.
With passthrough=proxy under [trapping] it will support domain 
names.
With passthrough=iptables under [trapping] it will support domain 
names and IP ranges. Note that this implementation is unmaintained 
and might not work.
Here's an example:
packetfence=http://www.packetfence.org
The above will allow 80/tcp traffic to the packetfence domain (the
left value is arbitrary). Passthroughs can also take the form of:
test=192.168.100.10/23
which would allow full IP to all 512 destination addresses. 
Unsupported in trapping.passhtrough=proxy.
EOT

[alerting.log]
type=text
description=<<EOT
Log file where "log" actions are sent.
EOT

[alerting.fromaddr]
type=text
description=<<EOT
Email address from which notifications of rogue DHCP servers, 
violations with an action of "email", or any other 
PacketFence-related message are sent.
Empty means root@<server-domain-name>.
EOT

[alerting.emailaddr]
type=text
description=<<EOT
Email address to which notifications of rogue DHCP servers, violations
with an action of "email", or any other PacketFence-related message
goes to.
EOT

[alerting.smtpserver]
type=text
description=<<EOT
Server through which to send messages to the above emailaddr.  The
default is localhost - be sure you're running an SMTP host locally if
you don't change it!
EOT

[alerting.subjectprefix]
type=text
description=<<EOT
Subject prefix for email notifications of rogue DHCP servers,
violations with an action of "email", or any other PacketFence-related
message.
EOT

[ports.admin]
type=text
description=<<EOT
Port the administrative interface listens on.
EOT

[ports.listeners]
type=multi
options=imap|pop3
description=<<EOT
Enables "bogus" IMAP and POP servers.  These servers serve only to
deliver a message (POP3) or send an alert (IMAP) to inform the user
that he/she must register before connectivity is allowed.  Content of
the message is found at <conf_dir>/listener.msg
EOT

[interface.gateway]
type=text
description=<<EOT
Gateway of the named interface.
EOT

[interface.ip]
type=text
description=<<EOT
IP adress of the named interface - note that this should mirror the
OS-level configuration but it does not make any OS-level changes.
EOT

[interface.mask]
type=text
description=<<EOT
Network mask of the named interface.
EOT

[interface.type]
type=multi
options=internal|management|managed|monitor|dhcplistener|dhcp-listener|high-availability
description=<<EOT
Describes "type" of named interface.  internal describes interfaces
where PacketFence will enforce network access. management (or managed)
interfaces have the administrative GUI running on them, host SNMP trap
receiver and RADIUS server. monitor is the interface that snort listens 
on. dhcp-listener is an interface where the DHCP traffic is coming in 
either via a network SPAN or IP-Helpers configuration. high-availability
is for an interface between two PacketFence servers dedicated to 
high-availability (drbd, corosync).
EOT

[interface.enforcement]
type=toggle
options=vlan|inline
description=<<EOT
Describes the technique PacketFence will use to enforce network access.
VLAN is the out-of-band VLAN-based device isolation requiring integration
in your network environment and inline is a DHCP-based mode where
PacketFence acts as a filtering gateway.
EOT

[expire.iplog]
type=time
description=<<EOT
Time which you would like to keep logs on IP/MAC information 
A value of 0d disables expiration.
example:
iplog=180d
EOT

[expire.locationlog]
type=time
description=<<EOT
Time which you would like to keep logs on location information.
Please note that this table should not become too big since it
could degrade pfsetvlan performance.
A value of 0d disables expiration.
example:
locationlog=180d
EOT

[expire.node]
type=time
description=<<EOT
Time before a node is removed due to inactivity.
A value of 0d disables expiration.
example:
node=90d
EOT

[expire.traplog]
type=time
description=<<EOT
Time which you would like to keep logs on trap information 
A value of 0d disables expiration.
example:
traplog=180d
EOT

[scan.engine]
type=toggle
options=none|openvas|nessus
description=<<EOT
Which scan engine to use to perform client-side policy compliance.
EOT

[scan.registration]
type=toggle
options=enabled|disabled
description=<<EOT
If this option is enabled, the PF system will scan each host after
registration is complete.
EOT

[scan.duration]
type=time
description=<<EOT
Approximate duration of a scan. User being scanned on registration are presented
a progress bar for this duration, afterwards the browser refreshes until scan is
complete.
EOT

[scan.host]
type=text
description=<<EOT
Host the scanning engine is running on.  For performance reasons, we
recommend running the scanning engine on a remote server. A passthrough will 
be automagically created.
EOT

[scan.user]
type=text
description=<<EOT
Username to log into scanning engine with.
EOT

[scan.pass]
type=text
description=<<EOT
Password to log into scanning engine with.
EOT

[scan.nessus_port]
type=text
description=<<EOT
Remote port of the Nessus scanning engine. Default value should be fine in 
most cases.
EOT

[scan.nessus_clientfile]
type=text
description=<<EOT
Name of the NessusClient file; the file format is documented at
http://www.nessus.org/documentation/dot_nessus_file_format.pdf.
This file must be found in conf/nessus/.
EOT

[scan.nessus_clientpolicy]
type=text
description=<<EOT
Name of the policy inside the NessusClient file
EOT

[scan.openvas_port]
type=text
description=<<EOT
Remote port of the OpenVAS scanning engine. Default value should be fine in 
most cases.
EOT

[scan.openvas_configid]
type=text
description=<<EOT
ID of the scanning configuration on the OpenVAS server
EOT

[scan.openvas_reportformatid]
type=text
description=<<EOT
ID of the .NBE report format on the OpenVAS server
EOT

[database.pass]
type=text
description=<<EOT
Password for the mysql database used by PacketFence.
EOT

[database.db]
type=text
description=<<EOT
Name of the mysql database used by PacketFence.
EOT

[database.user]
type=text
description=<<EOT
Username of the account with access to the mysql database used by
PacketFence.
EOT

[database.port]
type=numeric
description=<<EOT
Port the mysql server is running on.
EOT

[database.host]
type=text
description=<<EOT
Server the mysql server is running on.
EOT

[alerting.admin_netbiosname]
type=text
description=<<EOT
NetBIOS name of administrative workstation to send alerts with
"winpopup" action assigned.
EOT

[alerting.wins_server]
type=text
description=<<EOT
WINS server to  resolve NetBIOS name of administrative workstation to
IP address.
EOT

[registration.range]
type=text
description=<<EOT
Address ranges/CIDR blocks that PF will force registration on.
Gateway, network, and broadcast addresses are ignored. If this is not
defined the trapping.range will be used as the registration range.
Comma-delimiter entries should be of the form:
a.b.c.0/24
a.b.c.0-255
a.b.c.0-a.b.c.255
a.b.c.d
EOT

[vlan.closelocationlogonstop]
type=toggle
options=enabled|disabled
description=<<EOT
Should open locationlog entries be closed when pfsetvlan is
stopped
EOT

[vlan.nbtraphandlerthreads]
type=text
description=<<EOT
Number of trap handler threads pfsetvlan should start
EOT

[vlan.nbtrapparserthreads]
type=text
description=<<EOT
Number of trap parser threads pfsetvlan should start
EOT

[vlan.bounce_duration]
type=time
description=<<EOT
Delay to wait between the shut / no-shut on a port. Some OS need a higher value
than others. Default should be reasonable for almost every OS but is too long 
for the usual proprietary OS.
EOT

[vlan.trap_limit]
type=toggle
options=enabled|disabled
description=<<EOT
Controls whether or not the trap_limit feature is enabled. Trap limiting is
a way to limit the damage done by malicious users or misbehaving switch 
that sends too many traps to PacketFence causing it to be overloaded. Trap
limiting is controlled by the trap_limit_threshold and trap_limit_action 
parameters. Default is enabled.
EOT

[vlan.trap_limit_threshold]
type=numeric
description=<<EOT
Maximum number of SNMP traps that a switchport can send to PacketFence within 
a minute without being flagged as DoS. Defaults to 100
EOT

[vlan.trap_limit_action]
type=multi
options=email|shut
description=<<EOT
Action that PacketFence will take if the vlan.trap_limit_threshold is reached.
Defaults to none. email will send an email every hour if the limit's still reached.
shut will shut the port on the switch and will also send an email even if email is not
specified.
EOT

[inline.ports_redirect]
type=text
description=<<EOT
Ports to intercept and redirect for trapped and unregistered systems.  Defaults
to 80/tcp (HTTP), 443/tcp (HTTPS). Redirecting 443/tcp (SSL) will work, 
although users might get certificate errors if you didn't install a valid 
certificate or if you don't use DNS (although IP-based certificates supposedly
exist)
Redirecting 53/udp (DNS) seems to have issues and is also not recommended.
We also have experimental IMAP and POP3 listeners which give fake emails 
telling users to open their browsers. Enable them via the ports.listeners 
parameter and add the IMAP (143/tcp) and POP3 (110/tcp) here.
EOT

[servicewatch.email]
type=toggle
options=enabled|disabled
description=<<EOT
Should pfcmd service pf watch send an email when services are not running?
You must make sure to call the watch command. Installing it in the cron is the
recommended approach:
*/5 * * * * /usr/local/pf/bin/pfcmd service pf watch
EOT

[servicewatch.restart]
type=toggle
options=enabled|disabled
description=<<EOT
Should pfcmd service pf watch restart PF when services are not running?
You must make sure to call the watch command. Installing it in the cron is the
recommended approach:
*/5 * * * * /usr/local/pf/bin/pfcmd service pf watch
EOT

[captive_portal.network_detection]
type=toggle
options=enabled|disabled
description=<<EOT
Enable the automatic network detection feature for registration auto-redirect
EOT

[captive_portal.network_detection_ip]
type=text
description=<<EOT
This IP is used as the webserver who hosts the 
common/network-access-detection.gif which is used to detect if network access
was enabled. It cannot be a domain name since it is used in registration or 
quarantine where DNS is blackholed. It is recommended that you allow your users
to reach your packetfence server and put your LAN's PacketFence IP. By default
we will make this reach PacketFence's website as an easy solution.
EOT

[advanced.reevaluate_access_reasons]
type=multi
options=node_modify|manage_register|manage_deregister|manage_vclose|manage_vopen|violation_modify|violation_add|violation_delete|redir.cgi|pfcmd_vlan
description=<<EOT
After which calls to pfcmd do we have to re-evaluate the state of a node and 
re-assign VLAN or change iptables rules
EOT

[provisioning.autoconfig]
type=toggle
options=enabled|disabled
description=<<EOT
Enable or Disable the generation of a pre-built XML mobile configuration profile for iPhone, iPad, or iPod users
EOT

[provisioning.ssid]
type=text
description=<<EOT
The hidden SSID where the user should connect to after registration
EOT

[provisioning.category]
type=text
description=<<EOT
Apply to node that are members of the following category
EOT

[billing.gateway]
type=toggle
options=authorize_net
description=<<EOT
The payment gateway to process the payments
EOT

[billing.authorizenet_posturl]
type=text
description=<<EOT
The payment gateway processing URL (Provided by Authorize.net)
EOT

[billing.authorizenet_login]
type=text
description=<<EOT
The merchant's unique API Login ID (Provided by Authorize.net)
EOT

[billing.authorizenet_trankey]
type=text
description=<<EOT
The merchant's unique Transaction Key (Provided by Authorize.net)
EOT
